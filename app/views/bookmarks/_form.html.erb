<div>
  <%= form_with(model: bookmark, local: true) do |form| %>
  <% if bookmark.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(bookmark.errors.count, "error") %> prohibited this bookmark from being saved:</h2>

      <ul>
      <% bookmark.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :url %>
    <%= form.text_field :url %>
  </div>

  <div class="field">
    <%= form.label :title %>
    <%= form.text_field :title %>
  </div>

  <div class="field">
    <%= form.label :screenshot %>
    <%= form.file_field :screenshot %>
  </div>

  <div class="field" id='add_tags'>
    <%= form.label :tags %><br><br>
    <% Tag.all.order(:tag).each do |tag| %>
      <%if bookmark.tags.include?(tag) %>
        <span class='main-tag selected'>
          <%= check_box_tag("[tag][]", tag.id, checked = true) %>
          <%= form.label(:tag, tag.tag.capitalize) %>
        </span>
      <% else %>
        <span class='main-tag'>
          <%= check_box_tag("[tag][]", tag.id) %>
          <%= form.label(:tag, tag.tag.capitalize) %>
        </span>
      <% end %>
  <% end %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
  <% end %>

  <input id='newTag'> </input>
  <button id='newButt'>Create New Tag</button>
</div>

<script>

var addNewListener = (el) => {
  el.addEventListener('click', function(){
    inputEl = this.querySelector('input');
    this.classList.toggle('selected');
    inputEl.checked = !inputEl.checked
  });
}

document.getElementById('newButt').addEventListener('click', function(){
  var tagField = document.getElementById('newTag');
  tagValue = tagField.value.trim();
  createTag(tagValue);
  tagField.value = "";
})



var createTag = (data) => {
  var sendData =  {"tag": {"tag":data}};
  fetch('https://hidden-bastion-43962.herokuapp.com/tags.json', {
  //fetch('http://kerri-virtualbo:3000/tags.json', {
    method: 'post',
    body: JSON.stringify(sendData),
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': Rails.csrfToken()
    },
    credentials: 'same-origin'
  }).then(function(response) {
    return response.json();
  }).then(function(data) {
    console.log(data);
    getLastTag();
  });
}




// var createTag = (data) => {
//   var sendData =  {"tag": {"tag":data}};
//   console.log(JSON.stringify(sendData));
//   var xhr = new XMLHttpRequest();
//   //xhr.open('POST', 'https://hidden-bastion-43962.herokuapp.com/tags.json');
//   xhr.open('POST', 'http://kerri-virtualbo:3000/tags.json');
//     xhr.withCredentials = true;
//     xhr.setRequestHeader('X-CSRF-Token', document.querySelector('meta[name="csrf-token"]').content)
//     xhr.setRequestHeader('Content-Type', 'application/json');    
//     xhr.onreadystatechange = function(){
//       if (xhr.readyState === 4){
//         //addTag(sendData);
//         getLastTag();
//       }
//     }
//   xhr.send(JSON.stringify(sendData));
// }

// var getLastTag = () => {
//   var xhr = new XMLHttpRequest();
//   //xhr.open('GET', 'https://hidden-bastion-43962.herokuapp.com/tags.json');
//   xhr.open('GET', 'http://kerri-virtualbo:3000/tags.json');
//   xhr.setRequestHeader('Content-Type', 'application/json');
//   xhr.onreadystatechange = function(){
//     if (xhr.readyState === 4){
//       var response = JSON.parse(xhr.response);
//       var newTag = response[response.length -1];
//       //appendTag(newTag);
//       updateBookmark(newTag);
//     }
//   }
//   xhr.send();
// }

var getLastTag = () => {
  Rails.ajax({
    //url: "http://kerri-virtualbo:3000/tags.json",
    url: "https://hidden-bastion-43962.herokuapp.com/tags.json",
    type: "GET",
    success: function(data) {
      var newTag = data[data.length -1];
      console.log(newTag);
      //appendTag(newTag);
      updateBookmark(newTag);
    }
  });
}

// var getLastTag = () => {
//   //fetch('https://hidden-bastion-43962.herokuapp.com/tags.json')
//   fetch('http://kerri-virtualbo:3000/tags.json')
//     .then( (response) => {
//         return response.json() })
//     .then( (json) => {
//       console.log(json);
//     });
// };


var updateBookmark = (data) => {
  var url = this.location.href.slice(0, -5) + ".json"
  var sendData =  {"newTag":{"id":data.id, "tag":data.tag}};
  fetch(url, {
    method: 'put',
    body: JSON.stringify(sendData),
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': Rails.csrfToken()
    },
    credentials: 'same-origin'
  }).then(function(response) {
    return response.json();
  }).then(function(data) {
    console.log(data);
    location.reload();
  });
}


// var updateBookmark = (data) => {
//   var url = this.location.href.slice(0, -5) + ".json"
//   console.log(this);
//   var sendData = {"newTag":{"id":data.id, "tag":data.tag}};
//   console.log(JSON.stringify(sendData));
//   var xhr = new XMLHttpRequest();
//   xhr.open('PUT', url);
//     xhr.withCredentials = true;
//     xhr.setRequestHeader('X-CSRF-Token', document.querySelector('meta[name="csrf-token"]').content)
//     xhr.setRequestHeader('Content-Type', 'application/json');
//     xhr.onreadystatechange = function(){
//       location.reload();
//     }
//   xhr.send(JSON.stringify(sendData));
// }

// var appendTag = (data) => {
//   var newTagEl = document.createElement('span');
//   newTagEl.classList = 'main-tag selected';
//   var input = document.createElement('input');
//   input.type="checkbox";
//   input.name="[tag][]";
//   input.id="_tag_";
//   input.value = data.id;
//   newTagEl.appendChild(input);
//   var label = document.createElement('label');
//   label.htmlFor = "bookmark_tag";
//   label.innerHTML = data.tag;
//   newTagEl.appendChild(label);
//   newTag.innerHTML = tagValue;
//   document.getElementById('add_tags').appendChild(newTagEl);
//   addNewListener(newTagEl);
// }

window.addEventListener('DOMContentLoaded', function() {
  var tags = document.querySelectorAll('.main-tag')
  for(let i = 0; i < tags.length; i++) {
    addNewListener( tags[i]);
  };
})

</script>
